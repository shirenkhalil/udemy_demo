def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdk 31
    ndkVersion '23.1.7779620'
    compileSdkVersion  flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion '23.1.7779620'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.udemyD:\\udemy_demo\\android>gradlew --version\n" +
                "Downloading https://services.gradle.org/distributions/gradle-7.4.2grad-all.zip\n" +
                "\n" +
                "Exception in thread \"main\" java.io.FileNotFoundException: https://downloads.gradle-dn.com/distributions/gradl\n" +
                "e-7.4.2grad-all.zip\n" +
                "        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(Unknown Source)\n" +
                "        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)\n" +
                "        at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(Unknown Source)\n" +
                "        at org.gradle.wrapper.Download.downloadInternal(Download.java:58)\n" +
                "        at org.gradle.wrapper.Download.download(Download.java:44)\n" +
                "        at org.gradle.wrapper.Install\$1.call(Install.java:61)\n" +
                "        at org.gradle.wrapper.Install\$1.call(Install.java:48)\n" +
                "        at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:65)\n" +
                "        at org.gradle.wrapper.Install.createDist(Install.java:48)\n" +
                "        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:128)\n" +
                "        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\n_demo"
        minSdkVersion 21
        targetSdk 31
        flutter.compileSdkVersion = 31
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


//    //noinspection GradleCompatible
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    //noinspection GradleCompatible,GradleCompatible
//    implementation 'com.android.support:design:28.0.0'
//    implementation 'com.android.support:support-annotations:28.0.0'
//    implementation 'com.andriod.support:support-v4:28.0.0'

}
